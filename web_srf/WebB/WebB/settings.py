"""
Django settings for WebB project.

Generated by 'django-admin startproject' using Django 1.11.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'klkp=65l5l0rqwxc+a76!&lhefyn$)y-mg)ybaw41ooms18&h^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ads.apps.AdsConfig',
]

MIDDLEWARE = [
    # 用于防止跨站脚本攻击（XSS）、跨站请求伪造（CSRF）等安全问题。
    "django.middleware.security.SecurityMiddleware",
    # 用于处理请求和响应的会话。
    "django.contrib.sessions.middleware.SessionMiddleware",
    # 用于处理一些通用的请求处理，例如处理请求头、请求方法等。
    "django.middleware.common.CommonMiddleware",
    # 这是因为Django框架在处理POST请求时，会检测CSRF令牌。如果没有检测到CSRF令牌，它会返回一个403 Forbidden错误。
    # "django.middleware.csrf.CsrfViewMiddleware",
    #  认证中间件，用于处理用户认证。
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    # 消息中间件，用于处理用户消息。
    "django.contrib.messages.middleware.MessageMiddleware",
    # X-Frame-Options中间件，用于防止点击劫持。
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = 'WebB.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WebB.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
# 配置Django中的密码验证器
AUTH_PASSWORD_VALIDATORS = [
    {
        # 这个验证器会检查用户密码是否与用户的其他属性（如用户名、邮箱等）相似。如果相似，则可能会存在安全风险，因此会拒绝保存这个密码。
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        # 检查用户密码的长度是否符合要求。Django默认要求密码长度至少为8个字符。
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        # 检查用户密码是否是常见的弱密码。
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        # 检查用户密码是否全部由数字组成。
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = 'static/'
