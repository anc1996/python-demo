"""
Django settings for CeleryDemo project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-e%$quszqg&go)$#s(=381=5)s37utwb+chub^(htxjva)k)$_#"

# 安全警告:不要在生产环境中打开调试开关运行!
DEBUG = True

# 允许以哪个主机的形式访问后端
# 默认情况下，ALLOWED_HOSTS 是一个空列表，表示不允许外网任何主机访问后端。
ALLOWED_HOSTS = ['*']

# 允许携带cookie
CORS_ALLOW_CREDENTIALS = True

print('查看导包路径sys:',sys.path) # 包含/home/source/Django/web_srf/CeleryDemo'
# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    
    # 自定义，
    "myapp", # 注册myapp应用
]

# 配置 Celery
CELERY_BROKER_URL = 'redis://:123456@127.0.0.1:6379/11'  # Redis 的 URL
CELERY_ACCEPT_CONTENT = ['json']               # 接受的消息内容类型
CELERY_TASK_SERIALIZER = 'json'                # 使用 JSON 序列化任务

# 可选：配置 Celery 结果后端
CELERY_RESULT_BACKEND = 'redis://:123456@127.0.0.1:6379/12'


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "CeleryDemo.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates']
	    ,
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "CeleryDemo.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/
# 语言和时区设置
LANGUAGE_CODE = "zh-hans"
# 语言代码
TIME_ZONE = "Asia/Shanghai"
# 时区，当 USE_I18N 为 True 时，Django 会将国际化支持（如多语言URL和静态文件翻译）启用
USE_I18N = True
# 控制 Django 是否使用本地时间
USE_TZ = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
