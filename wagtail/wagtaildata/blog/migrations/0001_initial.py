# Generated by Django 5.1.7 on 2025-04-14 09:21

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('wagtailcore', '0095_query_searchpromotion_querydailyhits'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=80, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': '博客分类',
                'verbose_name_plural': '博客分类',
            },
        ),
        migrations.CreateModel(
            name='BlogIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'verbose_name': '博客首页',
                'verbose_name_plural': '博客首页',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateField(verbose_name='发布日期')),
                ('intro', models.CharField(max_length=250, verbose_name='简介')),
                ('body', wagtail.fields.StreamField([('heading', 2), ('paragraph', 3), ('code', 7), ('math_formula', 10), ('markdown', 11), ('image', 12), ('video', 13), ('quote', 15)], block_lookup={0: ('wagtail.blocks.CharBlock', (), {'required': True}), 1: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')]}), 2: ('wagtail.blocks.StructBlock', [[('heading_text', 0), ('level', 1)]], {}), 3: ('blog.blocks.RichTextBlock', (), {}), 4: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('python', 'Python'), ('javascript', 'JavaScript'), ('html', 'HTML'), ('css', 'CSS'), ('bash', 'Bash/Shell'), ('sql', 'SQL'), ('java', 'Java'), ('cpp', 'C++'), ('csharp', 'C#'), ('php', 'PHP'), ('ruby', 'Ruby'), ('go', 'Go'), ('rust', 'Rust'), ('typescript', 'TypeScript'), ('swift', 'Swift'), ('kotlin', 'Kotlin'), ('scala', 'Scala'), ('r', 'R'), ('dart', 'Dart'), ('plaintext', '纯文本')]}), 5: ('wagtail.blocks.TextBlock', (), {}), 6: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'required': False}), 7: ('wagtail.blocks.StructBlock', [[('language', 4), ('code', 5), ('show_line_numbers', 6)]], {}), 8: ('wagtail.blocks.TextBlock', (), {'help_text': '使用LaTeX语法输入数学公式'}), 9: ('wagtail.blocks.BooleanBlock', (), {'default': True, 'help_text': '选择是否使用显示模式（display mode）', 'required': False}), 10: ('wagtail.blocks.StructBlock', [[('formula', 8), ('display_mode', 9)]], {}), 11: ('blog.blocks.MarkdownBlock', (), {}), 12: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 13: ('wagtail.embeds.blocks.EmbedBlock', (), {}), 14: ('wagtail.blocks.CharBlock', (), {'required': False}), 15: ('wagtail.blocks.StructBlock', [[('text', 5), ('source', 14)]], {})}, verbose_name='内容')),
                ('mongo_content_id', models.CharField(blank=True, help_text='MongoDB中存储的额外内容ID', max_length=24, null=True)),
                ('categories', modelcluster.fields.ParentalManyToManyField(blank=True, to='blog.blogcategory')),
            ],
            options={
                'verbose_name': '博客页面',
                'verbose_name_plural': '博客页面',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BlogPageTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='blog.blogpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blogpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='blog.BlogPageTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
