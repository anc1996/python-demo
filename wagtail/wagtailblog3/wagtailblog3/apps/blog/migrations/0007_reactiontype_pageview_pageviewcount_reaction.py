# Generated by Django 5.1 on 2025-05-07 08:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0006_alter_blogpage_options'),
        ('wagtailcore', '0096_remove_searchpromotion_query_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='反应名称')),
                ('icon', models.CharField(max_length=50, verbose_name='图标CSS类')),
                ('display_order', models.PositiveSmallIntegerField(default=0, verbose_name='显示顺序')),
            ],
            options={
                'verbose_name': '反应类型',
                'verbose_name_plural': '反应类型',
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('is_unique', models.BooleanField(default=False)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_views', to='wagtailcore.page')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '页面访问记录',
                'verbose_name_plural': '页面访问记录',
                'indexes': [models.Index(fields=['page', 'viewed_at'], name='blog_pagevi_page_id_1f6d42_idx'), models.Index(fields=['viewed_at'], name='blog_pagevi_viewed__ef2958_idx')],
            },
        ),
        migrations.CreateModel(
            name='PageViewCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('count', models.PositiveIntegerField(default=0)),
                ('unique_count', models.PositiveIntegerField(default=0)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_counts', to='wagtailcore.page')),
            ],
            options={
                'verbose_name': '页面访问统计',
                'verbose_name_plural': '页面访问统计',
                'unique_together': {('page', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='wagtailcore.page')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('reaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='blog.reactiontype')),
            ],
            options={
                'verbose_name': '用户反应',
                'verbose_name_plural': '用户反应',
                'unique_together': {('page', 'session_key', 'ip_address'), ('page', 'user')},
            },
        ),
    ]
